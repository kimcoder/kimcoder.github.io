{
  "routes": [
    {
      "title": "javascript",
      "open": true,
      "routes": [
        {
          "title": "temporal dead zone",
          "path": "/javascript/tdz",
          "editUrl": "/javascript/tdz.mdx"
        },
        {
          "title": "JavaScript Pass By Value Function Parameters",
          "path": "/javascript/javascript-pass-by-value-function-parameters",
          "editUrl": "/javascript/javascript-pass-by-value-function-parameters.mdx"
        },
        {
          "title": "eslint import rule 설정의 이점",
          "path": "/javascript/eslint-import-order",
          "editUrl": "/javascript/eslint-import-order"
        },
        {
          "title": "자바스크립트의 데이터 타입",
          "path": "/javascript/data-type",
          "editUrl": "/javascript/data-type.mdx"
        }
      ]
    },
    {
      "title": "typescript",
      "open": true,
      "routes": [
        {
          "title": "Interfaces vs Type Aliases",
          "path": "/typescript/interface-vs-type",
          "editUrl": "/typescript/interface-vs-type.mdx"
        },
        {
          "title": "Enum",
          "path": "/typescript/enum",
          "editUrl": "/typescript/enum.mdx"
        }
      ]
    },
    {
      "title": "react.js",
      "open": true,
      "routes": [
        {
          "title": "클린한 프론트엔드 아키텍처를 향한 첫 걸음",
          "path": "/react/clean-frontend-architecture",
          "editUrl": "/react/clean-frontend-architecture.mdx"
        },
        {
          "title": "React 컴포넌트 제작기",
          "open": true,
          "routes": [
            {
              "title": "제작기 - 1",
              "path": "/react/react-simple-image-slider/log-1",
              "editUrl": "/react/react-simple-image-slider/log-1.mdx"
            },
            {
              "title": "제작기 - 2",
              "path": "/react/react-simple-image-slider/log-2",
              "editUrl": "/react/react-simple-image-slider/log-2.mdx"
            },
            {
              "title": "제작기 - 3",
              "path": "/react/react-simple-image-slider/log-3",
              "editUrl": "/react/react-simple-image-slider/log-3.mdx"
            }
          ]
        }
      ]
    },
    {
      "title": "books",
      "open": true,
      "routes": [
        {
          "title": "리팩터링",
          "open": true,
          "routes": [
            {
              "title": "소개",
              "path": "/books/refactoring/0",
              "editUrl": "/books/refactoring/0.mdx"
            },
            {
              "title": "1장, 리팩터링: 첫 번째 예시",
              "path": "/books/refactoring/1",
              "editUrl": "/books/refactoring/1.mdx"
            },
            {
              "title": "2장, 리팩터링 원칙",
              "path": "/books/refactoring/2",
              "editUrl": "/books/refactoring/2.mdx"
            },
            {
              "title": "3장, 코드에서 나는 악취",
              "path": "/books/refactoring/3",
              "editUrl": "/books/refactoring/3.mdx"
            },
            {
              "title": "4장, 테스트 구축하기",
              "path": "/books/refactoring/4",
              "editUrl": "/books/refactoring/4.mdx"
            },
            {
              "title": "6장, 기본적인 리팩터링",
              "path": "/books/refactoring/6",
              "editUrl": "/books/refactoring/6.mdx"
            },
            {
              "title": "7장, 캡슐화",
              "path": "/books/refactoring/7",
              "editUrl": "/books/refactoring/7.mdx"
            },
            {
              "title": "8장, 기능 이동",
              "path": "/books/refactoring/8",
              "editUrl": "/books/refactoring/8.mdx"
            },
            {
              "title": "9장, 데이터 조직화",
              "path": "/books/refactoring/9",
              "editUrl": "/books/refactoring/9.mdx"
            },
            {
              "title": "10장, 조건부 로직 간소화",
              "path": "/books/refactoring/10",
              "editUrl": "/books/refactoring/10.mdx"
            },
            {
              "title": "11장, API 리팩터링",
              "path": "/books/refactoring/11",
              "editUrl": "/books/refactoring/11.mdx"
            },
            {
              "title": "12장, 상속 다루기",
              "path": "/books/refactoring/12",
              "editUrl": "/books/refactoring/12.mdx"
            }
          ]
        },
        {
          "title": "클린 아키텍처",
          "open": true,
          "routes": [
            {
              "title": "소개",
              "path": "/books/clean-architecture/0",
              "editUrl": "/books/clean-architecture/0.mdx"
            },
            {
              "title": "1부, 소개",
              "path": "/books/clean-architecture/1",
              "editUrl": "/books/clean-architecture/1.mdx"
            },
            {
              "title": "2부, 벽돌부터 시작하기: 프로그래밍 패러다임",
              "path": "/books/clean-architecture/2",
              "editUrl": "/books/clean-architecture/2.mdx"
            },
            {
              "title": "3부, 설계 원칙",
              "path": "/books/clean-architecture/3",
              "editUrl": "/books/clean-architecture/3.mdx"
            },
            {
              "title": "4부, 컴포넌트 원칙",
              "path": "/books/clean-architecture/4",
              "editUrl": "/books/clean-architecture/4.mdx"
            },
            {
              "title": "5부, 아키텍처",
              "path": "/books/clean-architecture/5",
              "editUrl": "/books/clean-architecture/5.mdx"
            }
          ]
        },
        {
          "title": "함수형 사고",
          "open": true,
          "routes": [
            {
              "title": "소개",
              "path": "/books/functional-thinking/0",
              "editUrl": "/books/functional-thinking/0.mdx"
            },
            {
              "title": "1장, 왜",
              "path": "/books/functional-thinking/1",
              "editUrl": "/books/functional-thinking/1.mdx"
            },
            {
              "title": "2장, 전환",
              "path": "/books/functional-thinking/2",
              "editUrl": "/books/functional-thinking/2.mdx"
            },
            {
              "title": "3장, 양도하라",
              "path": "/books/functional-thinking/3",
              "editUrl": "/books/functional-thinking/3.mdx"
            },
            {
              "title": "4장, 열심히보다는 현명하게",
              "path": "/books/functional-thinking/4",
              "editUrl": "/books/functional-thinking/4.mdx"
            },
            {
              "title": "5장, 진화하라",
              "path": "/books/functional-thinking/5",
              "editUrl": "/books/functional-thinking/5.mdx"
            },
            {
              "title": "6장, 전진하라",
              "path": "/books/functional-thinking/6",
              "editUrl": "/books/functional-thinking/6.mdx"
            },
            {
              "title": "7장, 실용적 사고",
              "path": "/books/functional-thinking/7",
              "editUrl": "/books/functional-thinking/7.mdx"
            },
            {
              "title": "8장, 폴리글랏과 폴리패러다임",
              "path": "/books/functional-thinking/8",
              "editUrl": "/books/functional-thinking/8.mdx"
            }
          ]
        },
        {
          "title": "클린 코드",
          "open": true,
          "routes": [
            {
              "title": "소개",
              "path": "/books/clean-code/0",
              "editUrl": "/books/clean-code/0.mdx"
            },
            {
              "title": "1장, 깨끗한 코드",
              "path": "/books/clean-code/1",
              "editUrl": "/books/clean-code/1.mdx"
            },
            {
              "title": "2장, 의미 있는 이름",
              "path": "/books/clean-code/2",
              "editUrl": "/books/clean-code/2.mdx"
            },
            {
              "title": "3장, 함수",
              "path": "/books/clean-code/3",
              "editUrl": "/books/clean-code/3.mdx"
            },
            {
              "title": "4장, 주석",
              "path": "/books/clean-code/4",
              "editUrl": "/books/clean-code/4.mdx"
            },
            {
              "title": "5장, 형식 맞추기",
              "path": "/books/clean-code/5",
              "editUrl": "/books/clean-code/5.mdx"
            },
            {
              "title": "6장, 객체와 자료 구조",
              "path": "/books/clean-code/6",
              "editUrl": "/books/clean-code/6.mdx"
            },
            {
              "title": "7장, 오류 처리",
              "path": "/books/clean-code/7",
              "editUrl": "/books/clean-code/7.mdx"
            },
            {
              "title": "8장, 경계",
              "path": "/books/clean-code/8",
              "editUrl": "/books/clean-code/8.mdx"
            },
            {
              "title": "9장, 단위 테스트",
              "path": "/books/clean-code/9",
              "editUrl": "/books/clean-code/9.mdx"
            }
          ]
        },
        {
          "title": "단위 테스트",
          "open": true,
          "routes": [
            {
              "title": "소개",
              "path": "/books/unit-testing/0",
              "editUrl": "/books/unit-testing/0.mdx"
            },
            {
              "title": "1장, 단위 테스트의 목표",
              "path": "/books/unit-testing/1",
              "editUrl": "/books/unit-testing/1.mdx"
            },
            {
              "title": "2장, 단위 테스트란 무엇인가",
              "path": "/books/unit-testing/2",
              "editUrl": "/books/unit-testing/2.mdx"
            },
            {
              "title": "3장, 단위 테스트 구조",
              "path": "/books/unit-testing/3",
              "editUrl": "/books/unit-testing/3.mdx"
            },
            {
              "title": "4장, 좋은 단위 테스트의 4대 요소",
              "path": "/books/unit-testing/4",
              "editUrl": "/books/unit-testing/4.mdx"
            },
            {
              "title": "5장, 목과 테스트 취약성",
              "path": "/books/unit-testing/5",
              "editUrl": "/books/unit-testing/5.mdx"
            },
            {
              "title": "6장, 단위 테스트 스타일",
              "path": "/books/unit-testing/6",
              "editUrl": "/books/unit-testing/6.mdx"
            },
            {
              "title": "7장, 가치 있는 단위 테스트를 위한 리팩터링",
              "path": "/books/unit-testing/7",
              "editUrl": "/books/unit-testing/7.mdx"
            },
            {
              "title": "8장, 통합 테스트를 하는 이유",
              "path": "/books/unit-testing/8",
              "editUrl": "/books/unit-testing/8.mdx"
            },
            {
              "title": "9장, 목 처리에 대한 모범 사례",
              "path": "/books/unit-testing/9",
              "editUrl": "/books/unit-testing/9.mdx"
            },
            {
              "title": "11장, 단위 테스트 안티 패턴",
              "path": "/books/unit-testing/11",
              "editUrl": "/books/unit-testing/11.mdx"
            }
          ]
        },
        {
          "title": "소프트웨어 아키텍처 101",
          "open": true,
          "routes": [
            {
              "title": "소개",
              "path": "/books/software-architecture-101/0",
              "editUrl": "/books/software-architecture-101/0.mdx"
            },
            {
              "title": "1장, 서론",
              "path": "/books/software-architecture-101/1",
              "editUrl": "/books/software-architecture-101/1.mdx"
            },
            {
              "title": "2장, 아키텍처 사고",
              "path": "/books/software-architecture-101/2",
              "editUrl": "/books/software-architecture-101/2.mdx"
            },
            {
              "title": "3장, 모듈성",
              "path": "/books/software-architecture-101/3",
              "editUrl": "/books/software-architecture-101/3.mdx"
            },
            {
              "title": "4장, 아키텍처 특성 정의",
              "path": "/books/software-architecture-101/4",
              "editUrl": "/books/software-architecture-101/4.mdx"
            }
          ]
        }
      ]
    },
    {
      "title": "performance",
      "open": true,
      "routes": [
        {
          "title": "이미지 파일 최적화",
          "path": "/performance/image-optimize",
          "editUrl": "/performance/image-optimize.mdx"
        }
      ]
    }
  ]
}

{
  "routes": [
    {
      "title": "리팩터링",
      "open": false,
      "routes": [
        {
          "title": "소개",
          "path": "/books/refactoring/0"
        },
        {
          "title": "1장, 리팩터링: 첫 번째 예시",
          "path": "/books/refactoring/1"
        },
        {
          "title": "2장, 리팩터링 원칙",
          "path": "/books/refactoring/2"
        },
        {
          "title": "3장, 코드에서 나는 악취",
          "path": "/books/refactoring/3"
        },
        {
          "title": "4장, 테스트 구축하기",
          "path": "/books/refactoring/4"
        },
        {
          "title": "6장, 기본적인 리팩터링",
          "path": "/books/refactoring/6"
        },
        {
          "title": "7장, 캡슐화",
          "path": "/books/refactoring/7"
        },
        {
          "title": "8장, 기능 이동",
          "path": "/books/refactoring/8"
        },
        {
          "title": "9장, 데이터 조직화",
          "path": "/books/refactoring/9"
        },
        {
          "title": "10장, 조건부 로직 간소화",
          "path": "/books/refactoring/10"
        },
        {
          "title": "11장, API 리팩터링",
          "path": "/books/refactoring/11"
        },
        {
          "title": "12장, 상속 다루기",
          "path": "/books/refactoring/12"
        }
      ]
    },
    {
      "title": "클린 아키텍처",
      "open": false,
      "routes": [
        {
          "title": "소개",
          "path": "/books/clean-architecture/0"
        },
        {
          "title": "1부, 소개",
          "path": "/books/clean-architecture/1"
        },
        {
          "title": "2부, 벽돌부터 시작하기: 프로그래밍 패러다임",
          "path": "/books/clean-architecture/2"
        },
        {
          "title": "3부, 설계 원칙",
          "path": "/books/clean-architecture/3"
        },
        {
          "title": "4부, 컴포넌트 원칙",
          "path": "/books/clean-architecture/4"
        },
        {
          "title": "5부, 아키텍처",
          "path": "/books/clean-architecture/5"
        }
      ]
    },
    {
      "title": "함수형 사고",
      "open": false,
      "routes": [
        {
          "title": "소개",
          "path": "/books/functional-thinking/0"
        },
        {
          "title": "1장, 왜",
          "path": "/books/functional-thinking/1"
        },
        {
          "title": "2장, 전환",
          "path": "/books/functional-thinking/2"
        },
        {
          "title": "3장, 양도하라",
          "path": "/books/functional-thinking/3"
        },
        {
          "title": "4장, 열심히보다는 현명하게",
          "path": "/books/functional-thinking/4"
        },
        {
          "title": "5장, 진화하라",
          "path": "/books/functional-thinking/5"
        },
        {
          "title": "6장, 전진하라",
          "path": "/books/functional-thinking/6"
        },
        {
          "title": "7장, 실용적 사고",
          "path": "/books/functional-thinking/7"
        },
        {
          "title": "8장, 폴리글랏과 폴리패러다임",
          "path": "/books/functional-thinking/8"
        }
      ]
    },
    {
      "title": "클린 코드",
      "open": false,
      "routes": [
        {
          "title": "소개",
          "path": "/books/clean-code/0"
        },
        {
          "title": "1장, 깨끗한 코드",
          "path": "/books/clean-code/1"
        },
        {
          "title": "2장, 의미 있는 이름",
          "path": "/books/clean-code/2"
        },
        {
          "title": "3장, 함수",
          "path": "/books/clean-code/3"
        },
        {
          "title": "4장, 주석",
          "path": "/books/clean-code/4"
        },
        {
          "title": "5장, 형식 맞추기",
          "path": "/books/clean-code/5"
        },
        {
          "title": "6장, 객체와 자료 구조",
          "path": "/books/clean-code/6"
        },
        {
          "title": "7장, 오류 처리",
          "path": "/books/clean-code/7"
        },
        {
          "title": "8장, 경계",
          "path": "/books/clean-code/8"
        },
        {
          "title": "9장, 단위 테스트",
          "path": "/books/clean-code/9"
        },
        {
          "title": "10장, 클래스",
          "path": "/books/clean-code/10"
        },
        {
          "title": "11장, 시스템",
          "path": "/books/clean-code/11"
        },
        {
          "title": "12장, 창발성",
          "path": "/books/clean-code/12"
        }
      ]
    },
    {
      "title": "단위 테스트",
      "open": false,
      "routes": [
        {
          "title": "소개",
          "path": "/books/unit-testing/0"
        },
        {
          "title": "1장, 단위 테스트의 목표",
          "path": "/books/unit-testing/1"
        },
        {
          "title": "2장, 단위 테스트란 무엇인가",
          "path": "/books/unit-testing/2"
        },
        {
          "title": "3장, 단위 테스트 구조",
          "path": "/books/unit-testing/3"
        },
        {
          "title": "4장, 좋은 단위 테스트의 4대 요소",
          "path": "/books/unit-testing/4"
        },
        {
          "title": "5장, 목과 테스트 취약성",
          "path": "/books/unit-testing/5"
        },
        {
          "title": "6장, 단위 테스트 스타일",
          "path": "/books/unit-testing/6"
        },
        {
          "title": "7장, 가치 있는 단위 테스트를 위한 리팩터링",
          "path": "/books/unit-testing/7"
        },
        {
          "title": "8장, 통합 테스트를 하는 이유",
          "path": "/books/unit-testing/8"
        },
        {
          "title": "9장, 목 처리에 대한 모범 사례",
          "path": "/books/unit-testing/9"
        },
        {
          "title": "11장, 단위 테스트 안티 패턴",
          "path": "/books/unit-testing/11"
        }
      ]
    },
    {
      "title": "소프트웨어 아키텍처 101",
      "open": false,
      "routes": [
        {
          "title": "소개",
          "path": "/books/software-architecture-101/0"
        },
        {
          "title": "1장, 서론",
          "path": "/books/software-architecture-101/1"
        },
        {
          "title": "2장, 아키텍처 사고",
          "path": "/books/software-architecture-101/2"
        },
        {
          "title": "3장, 모듈성",
          "path": "/books/software-architecture-101/3"
        },
        {
          "title": "4장, 아키텍처 특성 정의",
          "path": "/books/software-architecture-101/4"
        },
        {
          "title": "5장, 아키텍처 특성 식별",
          "path": "/books/software-architecture-101/5"
        },
        {
          "title": "6장, 아키텍처 특성의 측정 및 거버넌스",
          "path": "/books/software-architecture-101/6"
        },
        {
          "title": "7장, 아키텍처 특성 범위",
          "path": "/books/software-architecture-101/7"
        },
        {
          "title": "8장, 컴포넌트 기반 사고",
          "path": "/books/software-architecture-101/8"
        },
        {
          "title": "9장, 기초",
          "path": "/books/software-architecture-101/9"
        },
        {
          "title": "10장, 레이어드 아키텍처 스타일",
          "path": "/books/software-architecture-101/10"
        },
        {
          "title": "11장, 파이프라인 아키텍처 스타일",
          "path": "/books/software-architecture-101/11"
        },
        {
          "title": "12장, 마이크로커널 아키텍처 스타일",
          "path": "/books/software-architecture-101/12"
        },
        {
          "title": "13장, 서비스 기반 아키텍처 스타일",
          "path": "/books/software-architecture-101/13"
        },
        {
          "title": "14장, 이벤트 기반 아키텍처 스타일",
          "path": "/books/software-architecture-101/14"
        },
        {
          "title": "15장, 공간 기반 아키텍처 스타일",
          "path": "/books/software-architecture-101/15"
        },
        {
          "title": "16장, 오케스트레이션 기반 서비스 지향 아키텍처 스타일",
          "path": "/books/software-architecture-101/16"
        },
        {
          "title": "17장, 마이크로서비스 아키텍처 스타일",
          "path": "/books/software-architecture-101/17"
        },
        {
          "title": "18장, 최적의 아키텍처 스타일 선정",
          "path": "/books/software-architecture-101/18"
        },
        {
          "title": "19장, 아키텍처 결정",
          "path": "/books/software-architecture-101/19"
        },
        {
          "title": "20장, 아키텍처 리스크 분석",
          "path": "/books/software-architecture-101/20"
        },
        {
          "title": "21장, 아키텍처 도식화 및 프레젠테이션",
          "path": "/books/software-architecture-101/21"
        },
        {
          "title": "22장, 개발팀을 효율적으로",
          "path": "/books/software-architecture-101/22"
        },
        {
          "title": "23장, 협상과 리더십 스킬",
          "path": "/books/software-architecture-101/23"
        },
        {
          "title": "24장, 커리어패스 개발",
          "path": "/books/software-architecture-101/24"
        }
      ]
    },
    {
      "title": "이펙티브 엔지니어",
      "open": false,
      "routes": [
        {
          "title": "소개",
          "path": "/books/effective-engineer/0"
        },
        {
          "title": "1부, 올바른 마인드셋을 갖춰라",
          "path": "/books/effective-engineer/1"
        },
        {
          "title": "2부, 실행, 실행, 실행",
          "path": "/books/effective-engineer/2"
        },
        {
          "title": "3부, 장기적인 가치를 구축하라",
          "path": "/books/effective-engineer/3"
        }
      ]
    },
    {
      "title": "스태프 엔지니어",
      "open": false,
      "routes": [
        {
          "title": "소개",
          "path": "/books/staff-engineer/0"
        },
        {
          "title": "1장 스태프 엔지니어의 유형",
          "path": "/books/staff-engineer/1"
        },
        {
          "title": "2장 스태프 엔지니어의 실제 업무는 무엇일까?",
          "path": "/books/staff-engineer/2"
        },
        { "title": "3장 직책이 중요한가?", "path": "/books/staff-engineer/3" },
        { "title": "4장 중요한 일에 집중하자", "path": "/books/staff-engineer/4" },
        { "title": "5장 엔지니어링 전략의 작성", "path": "/books/staff-engineer/5" },
        { "title": "6장 기술 품질의 관리", "path": "/books/staff-engineer/6" },
        { "title": "7장 지휘권을 가진 사람과 긴밀하게 협력하기", "path": "/books/staff-engineer/7" },
        { "title": "8장 리드하려면 따라야 한다", "path": "/books/staff-engineer/8" },
        { "title": "9장 절대 틀리지 않는 방법을 배우자", "path": "/books/staff-engineer/9" },
        { "title": "10장 타인을 위한 공간의 창출", "path": "/books/staff-engineer/10" },
        { "title": "11장 동료와 네트워크 구축", "path": "/books/staff-engineer/11" },
        { "title": "12장 임원을 대상으로 하는 프레젠테이션", "path": "/books/staff-engineer/12" },
        { "title": "13장 승진 자료집", "path": "/books/staff-engineer/13" },
        { "title": "14장 스폰서 찾기", "path": "/books/staff-engineer/14" },
        { "title": "15장 스태프 프로젝트", "path": "/books/staff-engineer/15" },
        { "title": "16장 의사결정 그룹에 합류하고 그 위치를 유지하기", "path": "/books/staff-engineer/16" },
        { "title": "17장 자신을 드러내는 법", "path": "/books/staff-engineer/17" },
        { "title": "18장 내게 맞는 회사 찾기", "path": "/books/staff-engineer/18" },
        { "title": "19장 스태프플러스 직책을 위한 면접", "path": "/books/staff-engineer/19" },
        { "title": "20장 제안 협상하기", "path": "/books/staff-engineer/20" }
      ]
    },
    {
      "title": "웹 개발자를 위한 자바스크립트의 모든 것",
      "open": false,
      "routes": [
        {
          "title": "소개",
          "path": "/books/everything-about-js/0"
        },
        {
          "title": "1장 ES2015부터 ES2020까지 그리고 그 이후의 새로운 장난감",
          "path": "/books/everything-about-js/1"
        },
        {
          "title": "2장 블록 스코프 선언: let과 const",
          "path": "/books/everything-about-js/2"
        },
        { "title": "3장 새로운 함수 기능", "path": "/books/everything-about-js/3" },
        { "title": "4장 클래스", "path": "/books/everything-about-js/4" },
        { "title": "5장 새로운 객체 기능", "path": "/books/everything-about-js/5" },
        {
          "title": "6장 이터러블, 이터레이터, for-of, 이터러블 스프레드, 제너레이터",
          "path": "/books/everything-about-js/6"
        },
        { "title": "7장 디스트럭처링", "path": "/books/everything-about-js/7" },
        { "title": "8장 프라미스", "path": "/books/everything-about-js/8" },
        { "title": "9장 비동기 함수, 이터레이터, 제너레이터", "path": "/books/everything-about-js/9" },
        { "title": "10장 템플릿, 태그 함수, 새로운 문자열 함수", "path": "/books/everything-about-js/10" },
        { "title": "11장 새로운 배열 함수, 타입이 있는 배열", "path": "/books/everything-about-js/11" },
        { "title": "12장 맵과 세트", "path": "/books/everything-about-js/12" },
        { "title": "13장 모듈", "path": "/books/everything-about-js/13" },
        { "title": "14장 리플렉션-리플렉트과 프록시", "path": "/books/everything-about-js/14" },
        { "title": "15장 정규 표현식 업데이트", "path": "/books/everything-about-js/15" },
        { "title": "16장 공유 메모리", "path": "/books/everything-about-js/16" },
        { "title": "17장 그 외", "path": "/books/everything-about-js/17" }
      ]
    },
    {
      "title": "크리에이티브 프로그래머",
      "open": false,
      "routes": [
        { "title": "소개", "path": "/books/creative-programmer/0" },
        { "title": "1장 창의성을 향한 여정", "path": "/books/creative-programmer/1" },
        { "title": "2장 기술지식", "path": "/books/creative-programmer/2" },
        { "title": "3장 커뮤니케이션", "path": "/books/creative-programmer/3" },
        { "title": "4장 제약 조건", "path": "/books/creative-programmer/4" },
        { "title": "5장 비판적 사고", "path": "/books/creative-programmer/5" },
        { "title": "6장 호기심", "path": "/books/creative-programmer/6" },
        { "title": "7장 창의적 마인드셋", "path": "/books/creative-programmer/7" },
        { "title": "8장 창의적 기법", "path": "/books/creative-programmer/8" }
      ]
    }
  ]
}
